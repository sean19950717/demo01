package ${package}.modules.${module}.service.impl;

import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.demo.common.entity.Page;
import com.demo.common.entity.Query;
import ${package}.modules.${module}.entity.${className}Entity;
import ${package}.modules.${module}.manager.${className}Manager;
import ${package}.modules.${module}.service.${className}Service;

/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @url ${url}
 * @date ${datetime}
 */
@Service("${objName}Service")
public class ${className}ServiceImpl implements ${className}Service {

	@Autowired
	private ${className}Manager ${objName}Manager;

    @Override
    public int add(${className}Entity ${objName}) {
        return ${objName}Manager.add(${objName});
    }

    @Override
    public int removeLogicalById(Long id) {
        return ${objName}Manager.removeLogicalById(id);
    }

    @Override
    public int removeLogicalById(List<Long> ids) {
        return ${objName}Manager.removeLogicalById(ids);
    }

    @Override
    public int removePhysicalById(Long id) {
        return ${objName}Manager.removePhysicalById(id);
    }

    @Override
    public int removePhysicalById(List<Long> ids) {
        return ${objName}Manager.removePhysicalById(ids);
    }

    @Override
    public int removeAll() {
        return ${objName}Manager.removeAll();
    }

    @Override
    public int update(${className}Entity ${objName}) {
        return ${objName}Manager.update(${objName});
    }

    @Override
    public ${className}Entity getById(Long id) {
        return ${objName}Manager.getById(id);
    }

    @Override
    public ${className}Entity getByObject(${className}Entity ${objName}) {
        return ${objName}Manager.getByObject(${objName});
    }

    @Override
    public Page<${className}Entity> list(${className}Entity ${objName}, Page<${className}Entity> page) {
		${objName}Manager.list(${objName}, page);
        return page;
    }

    @Override
    public List<${className}Entity> list(${className}Entity ${objName}) {
        return ${objName}Manager.list(${objName});
    }

    @Override
    public List<${className}Entity> listAll() {
        return ${objName}Manager.listAll();
    }

    @Override
    public Page<${className}Entity> list${className}(Map<String, Object> params) {
        Query query = new Query(params);
        Page<${className}Entity> page = new Page<>(query);
            ${objName}Manager.list${className}(page, query);
        return page;
    }

}
